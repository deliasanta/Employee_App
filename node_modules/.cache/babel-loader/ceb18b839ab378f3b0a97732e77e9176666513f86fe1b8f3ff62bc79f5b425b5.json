{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\T\\\\WebstormProjects\\\\director-app\\\\src\\\\components\\\\DepartmentList.js\",\n  _s = $RefreshSig$();\n// src/components/DepartmentList.js\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardContent, Button, Typography, Grid, Dialog, DialogTitle, DialogContent, DialogActions, List, ListItem } from '@mui/material';\nimport ApiService from '../services/ApiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DepartmentList = () => {\n  _s();\n  const [departments, setDepartments] = useState([]);\n  const [selectedDepartment, setSelectedDepartment] = useState(null);\n  const [employeeList, setEmployeeList] = useState([]);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  useEffect(() => {\n    ApiService.getDepartments().then(response => setDepartments(response.data)).catch(error => console.error('Error fetching departments:', error));\n  }, []);\n  const handleDepartmentButtonClick = department => {\n    setSelectedDepartment(department);\n    ApiService.getEmployeesByDepartment(department.departmentID).then(response => setEmployeeList(response.data)).catch(error => console.error('Error fetching employees:', error));\n    setIsDialogOpen(true);\n  };\n  const handleDialogClose = () => {\n    setIsDialogOpen(false);\n    setEmployeeList([]);\n  };\n  const handleDeleteDepartment = () => {\n    ApiService.deleteDepartment(selectedDepartment.departmentID).then(() => {\n      setDepartments(departments.filter(dep => dep.departmentID !== selectedDepartment.departmentID));\n      setIsDialogOpen(false);\n      setEmployeeList([]);\n    }).catch(error => console.error('Error deleting department:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: [departments.map(department => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 4,\n      lg: 3,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: department.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"primary\",\n            onClick: () => handleDepartmentButtonClick(department),\n            children: \"View Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"secondary\",\n            onClick: () => {\n              setSelectedDepartment(department);\n              setIsDialogOpen(true);\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)\n    }, department.departmentID, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isDialogOpen,\n      onClose: handleDialogClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: `Employees in ${(selectedDepartment === null || selectedDepartment === void 0 ? void 0 : selectedDepartment.description) || ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(List, {\n          children: employeeList.map(employee => /*#__PURE__*/_jsxDEV(ListItem, {\n            children: employee.name\n          }, employee.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDialogClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDeleteDepartment,\n          color: \"secondary\",\n          children: \"Delete Department\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(DepartmentList, \"h+L09+PdunV72ND0ZP/Kjhu0nqU=\");\n_c = DepartmentList;\nexport default DepartmentList;\nvar _c;\n$RefreshReg$(_c, \"DepartmentList\");","map":{"version":3,"names":["React","useState","useEffect","Card","CardContent","Button","Typography","Grid","Dialog","DialogTitle","DialogContent","DialogActions","List","ListItem","ApiService","jsxDEV","_jsxDEV","DepartmentList","_s","departments","setDepartments","selectedDepartment","setSelectedDepartment","employeeList","setEmployeeList","isDialogOpen","setIsDialogOpen","getDepartments","then","response","data","catch","error","console","handleDepartmentButtonClick","department","getEmployeesByDepartment","departmentID","handleDialogClose","handleDeleteDepartment","deleteDepartment","filter","dep","container","spacing","children","map","item","xs","sm","md","lg","variant","gutterBottom","description","fileName","_jsxFileName","lineNumber","columnNumber","color","onClick","open","onClose","employee","name","id","_c","$RefreshReg$"],"sources":["C:/Users/T/WebstormProjects/director-app/src/components/DepartmentList.js"],"sourcesContent":["// src/components/DepartmentList.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    Button,\r\n    Typography,\r\n    Grid,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    List,\r\n    ListItem,\r\n} from '@mui/material';\r\nimport ApiService from '../services/ApiService';\r\n\r\nconst DepartmentList = () => {\r\n    const [departments, setDepartments] = useState([]);\r\n    const [selectedDepartment, setSelectedDepartment] = useState(null);\r\n    const [employeeList, setEmployeeList] = useState([]);\r\n    const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        ApiService.getDepartments()\r\n            .then(response => setDepartments(response.data))\r\n            .catch(error => console.error('Error fetching departments:', error));\r\n    }, []);\r\n\r\n    const handleDepartmentButtonClick = (department) => {\r\n        setSelectedDepartment(department);\r\n        ApiService.getEmployeesByDepartment(department.departmentID)\r\n            .then(response => setEmployeeList(response.data))\r\n            .catch(error => console.error('Error fetching employees:', error));\r\n        setIsDialogOpen(true);\r\n    };\r\n\r\n    const handleDialogClose = () => {\r\n        setIsDialogOpen(false);\r\n        setEmployeeList([]);\r\n    };\r\n\r\n    const handleDeleteDepartment = () => {\r\n        ApiService.deleteDepartment(selectedDepartment.departmentID)\r\n            .then(() => {\r\n                setDepartments(departments.filter(dep => dep.departmentID !== selectedDepartment.departmentID));\r\n                setIsDialogOpen(false);\r\n                setEmployeeList([]);\r\n            })\r\n            .catch(error => console.error('Error deleting department:', error));\r\n    };\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            {departments.map(department => (\r\n                <Grid item xs={12} sm={6} md={4} lg={3} key={department.departmentID}>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <Typography variant=\"h6\" gutterBottom>\r\n                                {department.description}\r\n                            </Typography>\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                color=\"primary\"\r\n                                onClick={() => handleDepartmentButtonClick(department)}\r\n                            >\r\n                                View Details\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                color=\"secondary\"\r\n                                onClick={() => {\r\n                                    setSelectedDepartment(department);\r\n                                    setIsDialogOpen(true);\r\n                                }}\r\n                            >\r\n                                Delete\r\n                            </Button>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            ))}\r\n\r\n            <Dialog open={isDialogOpen} onClose={handleDialogClose}>\r\n                <DialogTitle>{`Employees in ${selectedDepartment?.description || ''}`}</DialogTitle>\r\n                <DialogContent>\r\n                    <List>\r\n                        {employeeList.map(employee => (\r\n                            <ListItem key={employee.id}>\r\n                                {employee.name}\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleDialogClose}>Close</Button>\r\n                    <Button onClick={handleDeleteDepartment} color=\"secondary\">\r\n                        Delete Department\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default DepartmentList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}