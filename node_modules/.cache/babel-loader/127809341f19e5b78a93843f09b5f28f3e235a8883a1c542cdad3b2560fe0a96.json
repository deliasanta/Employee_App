{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\T\\\\WebstormProjects\\\\director-app\\\\src\\\\components\\\\DepartmentList.js\",\n  _s = $RefreshSig$();\n// src/components/DepartmentList.js\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardContent, Button, Typography, Grid, Dialog, DialogTitle, DialogContent, DialogActions, TextField } from '@mui/material';\nimport ApiService from '../services/ApiService';\nimport EmailForm from './EmailForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DepartmentList = () => {\n  _s();\n  const [departments, setDepartments] = useState([]);\n  const [selectedDepartment, setSelectedDepartment] = useState(null);\n  const [deleteResult, setDeleteResult] = useState(null);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [isAddDialogOpen, setIsAddDialogOpen] = useState(false);\n  const [isInfoDialogOpen, setIsInfoDialogOpen] = useState(false);\n  const [newDepartmentData, setNewDepartmentData] = useState({\n    description: '',\n    parentID: '',\n    managerID: ''\n  });\n\n  // New state for tracking selected departments for email\n  const [selectedDepartments, setSelectedDepartments] = useState([]);\n  const [isEmailFormOpen, setIsEmailFormOpen] = useState(false);\n  useEffect(() => {\n    ApiService.getDepartments().then(response => setDepartments(response.data)).catch(error => console.error('Error fetching departments:', error));\n  }, []);\n  const handleDepartmentButtonClick = department => {\n    setSelectedDepartment(department);\n    setIsDialogOpen(true);\n  };\n  const handleDialogClose = () => {\n    setIsDialogOpen(false);\n    setDeleteResult(null);\n    setSelectedDepartment(null);\n  };\n  const handleDeleteDepartment = () => {\n    ApiService.deleteDepartment(selectedDepartment.departmentID).then(() => {\n      setDepartments(departments.filter(dep => dep.departmentID !== selectedDepartment.departmentID));\n      setDeleteResult('Department deleted successfully.');\n    }).catch(error => {\n      console.error('Error deleting department:', error);\n      setDeleteResult('Error deleting department.');\n    });\n  };\n  const handleAddDialogClick = () => {\n    setIsAddDialogOpen(true);\n  };\n  const handleAddDialogClose = () => {\n    setIsAddDialogOpen(false);\n    setNewDepartmentData({\n      description: '',\n      parentID: '',\n      managerID: ''\n    });\n  };\n  const handleAddDepartment = () => {\n    ApiService.addDepartment(newDepartmentData).then(response => {\n      setDepartments([...departments, response.data]);\n      setIsAddDialogOpen(false);\n      setNewDepartmentData({\n        description: '',\n        parentID: '',\n        managerID: ''\n      });\n    }).catch(error => console.error('Error adding department:', error));\n  };\n  const handleShowInfoClick = department => {\n    setSelectedDepartment(department);\n    setIsInfoDialogOpen(true);\n  };\n  const handleInfoDialogClose = () => {\n    setIsInfoDialogOpen(false);\n    setSelectedDepartment(null);\n  };\n  const handleSelectDepartment = department => {\n    setSelectedDepartments(prevSelected => {\n      if (prevSelected.includes(department)) {\n        return prevSelected.filter(selectedDepartment => selectedDepartment !== department);\n      } else {\n        return [...prevSelected, department];\n      }\n    });\n  };\n  const handleSendEmailClick = () => {\n    if (selectedDepartments.length > 0) {\n      setIsEmailFormOpen(true);\n    } else {\n      console.warn('No departments selected for email');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleAddDialogClick,\n        children: \"Add Department\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleSendEmailClick,\n        children: \"Send Email to Selected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), departments.map(department => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 4,\n      lg: 3,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: department.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"secondary\",\n            onClick: () => handleDepartmentButtonClick(department),\n            children: \"Delete Department\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"primary\",\n            onClick: () => handleShowInfoClick(department),\n            children: \"Show All Info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: selectedDepartments.includes(department),\n            onChange: () => handleSelectDepartment(department)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }, this)\n    }, department.departmentID, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isDialogOpen,\n      onClose: handleDialogClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Delete Department\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Are you sure you want to delete the department?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: selectedDepartment === null || selectedDepartment === void 0 ? void 0 : selectedDepartment.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDialogClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          onClick: handleDeleteDepartment,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isAddDialogOpen,\n      onClose: handleAddDialogClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Add Department\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Description\",\n          fullWidth: true,\n          value: newDepartmentData.description,\n          onChange: e => setNewDepartmentData({\n            ...newDepartmentData,\n            description: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Parent ID\",\n          fullWidth: true,\n          value: newDepartmentData.parentID,\n          onChange: e => setNewDepartmentData({\n            ...newDepartmentData,\n            parentID: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Manager ID\",\n          fullWidth: true,\n          value: newDepartmentData.managerID,\n          onChange: e => setNewDepartmentData({\n            ...newDepartmentData,\n            managerID: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleAddDialogClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: handleAddDepartment,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isInfoDialogOpen,\n      onClose: handleInfoDialogClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: [(selectedDepartment === null || selectedDepartment === void 0 ? void 0 : selectedDepartment.description) || '', \" - All Info\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Department ID: \", selectedDepartment === null || selectedDepartment === void 0 ? void 0 : selectedDepartment.departmentID]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Parent ID: \", selectedDepartment === null || selectedDepartment === void 0 ? void 0 : selectedDepartment.parentID]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Manager ID: \", selectedDepartment === null || selectedDepartment === void 0 ? void 0 : selectedDepartment.managerID]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleInfoDialogClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isEmailFormOpen,\n      onClose: () => setIsEmailFormOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Send Email to Selected Departments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(EmailForm, {\n          selectedPersons: selectedDepartments,\n          onClose: () => setIsEmailFormOpen(false),\n          type: \"department\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 9\n  }, this);\n};\n_s(DepartmentList, \"oMDCTst2sVFj7InYT62dxqqYpmI=\");\n_c = DepartmentList;\nexport default DepartmentList;\nvar _c;\n$RefreshReg$(_c, \"DepartmentList\");","map":{"version":3,"names":["React","useState","useEffect","Card","CardContent","Button","Typography","Grid","Dialog","DialogTitle","DialogContent","DialogActions","TextField","ApiService","EmailForm","jsxDEV","_jsxDEV","DepartmentList","_s","departments","setDepartments","selectedDepartment","setSelectedDepartment","deleteResult","setDeleteResult","isDialogOpen","setIsDialogOpen","isAddDialogOpen","setIsAddDialogOpen","isInfoDialogOpen","setIsInfoDialogOpen","newDepartmentData","setNewDepartmentData","description","parentID","managerID","selectedDepartments","setSelectedDepartments","isEmailFormOpen","setIsEmailFormOpen","getDepartments","then","response","data","catch","error","console","handleDepartmentButtonClick","department","handleDialogClose","handleDeleteDepartment","deleteDepartment","departmentID","filter","dep","handleAddDialogClick","handleAddDialogClose","handleAddDepartment","addDepartment","handleShowInfoClick","handleInfoDialogClose","handleSelectDepartment","prevSelected","includes","handleSendEmailClick","length","warn","container","spacing","children","item","xs","variant","color","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","sm","md","lg","gutterBottom","Checkbox","checked","onChange","open","onClose","label","fullWidth","value","e","target","selectedPersons","type","_c","$RefreshReg$"],"sources":["C:/Users/T/WebstormProjects/director-app/src/components/DepartmentList.js"],"sourcesContent":["// src/components/DepartmentList.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    Button,\r\n    Typography,\r\n    Grid,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    TextField,\r\n} from '@mui/material';\r\nimport ApiService from '../services/ApiService';\r\nimport EmailForm from './EmailForm';\r\n\r\nconst DepartmentList = () => {\r\n    const [departments, setDepartments] = useState([]);\r\n    const [selectedDepartment, setSelectedDepartment] = useState(null);\r\n    const [deleteResult, setDeleteResult] = useState(null);\r\n    const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n    const [isAddDialogOpen, setIsAddDialogOpen] = useState(false);\r\n    const [isInfoDialogOpen, setIsInfoDialogOpen] = useState(false);\r\n    const [newDepartmentData, setNewDepartmentData] = useState({\r\n        description: '',\r\n        parentID: '',\r\n        managerID: '',\r\n    });\r\n\r\n    // New state for tracking selected departments for email\r\n    const [selectedDepartments, setSelectedDepartments] = useState([]);\r\n    const [isEmailFormOpen, setIsEmailFormOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        ApiService.getDepartments()\r\n            .then(response => setDepartments(response.data))\r\n            .catch(error => console.error('Error fetching departments:', error));\r\n    }, []);\r\n\r\n    const handleDepartmentButtonClick = (department) => {\r\n        setSelectedDepartment(department);\r\n        setIsDialogOpen(true);\r\n    };\r\n\r\n    const handleDialogClose = () => {\r\n        setIsDialogOpen(false);\r\n        setDeleteResult(null);\r\n        setSelectedDepartment(null);\r\n    };\r\n\r\n    const handleDeleteDepartment = () => {\r\n        ApiService.deleteDepartment(selectedDepartment.departmentID)\r\n            .then(() => {\r\n                setDepartments(departments.filter(dep => dep.departmentID !== selectedDepartment.departmentID));\r\n                setDeleteResult('Department deleted successfully.');\r\n            })\r\n            .catch(error => {\r\n                console.error('Error deleting department:', error);\r\n                setDeleteResult('Error deleting department.');\r\n            });\r\n    };\r\n\r\n    const handleAddDialogClick = () => {\r\n        setIsAddDialogOpen(true);\r\n    };\r\n\r\n    const handleAddDialogClose = () => {\r\n        setIsAddDialogOpen(false);\r\n        setNewDepartmentData({\r\n            description: '',\r\n            parentID: '',\r\n            managerID: '',\r\n        });\r\n    };\r\n\r\n    const handleAddDepartment = () => {\r\n        ApiService.addDepartment(newDepartmentData)\r\n            .then(response => {\r\n                setDepartments([...departments, response.data]);\r\n                setIsAddDialogOpen(false);\r\n                setNewDepartmentData({\r\n                    description: '',\r\n                    parentID: '',\r\n                    managerID: '',\r\n                });\r\n            })\r\n            .catch(error => console.error('Error adding department:', error));\r\n    };\r\n\r\n    const handleShowInfoClick = (department) => {\r\n        setSelectedDepartment(department);\r\n        setIsInfoDialogOpen(true);\r\n    };\r\n\r\n    const handleInfoDialogClose = () => {\r\n        setIsInfoDialogOpen(false);\r\n        setSelectedDepartment(null);\r\n    };\r\n\r\n    const handleSelectDepartment = (department) => {\r\n        setSelectedDepartments((prevSelected) => {\r\n            if (prevSelected.includes(department)) {\r\n                return prevSelected.filter((selectedDepartment) => selectedDepartment !== department);\r\n            } else {\r\n                return [...prevSelected, department];\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleSendEmailClick = () => {\r\n        if (selectedDepartments.length > 0) {\r\n            setIsEmailFormOpen(true);\r\n        } else {\r\n            console.warn('No departments selected for email');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={handleAddDialogClick}>\r\n                    Add Department\r\n                </Button>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={handleSendEmailClick}>\r\n                    Send Email to Selected\r\n                </Button>\r\n            </Grid>\r\n            {departments.map(department => (\r\n                <Grid item xs={12} sm={6} md={4} lg={3} key={department.departmentID}>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <Typography variant=\"h6\" gutterBottom>\r\n                                {department.description}\r\n                            </Typography>\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                color=\"secondary\"\r\n                                onClick={() => handleDepartmentButtonClick(department)}\r\n                            >\r\n                                Delete Department\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                color=\"primary\"\r\n                                onClick={() => handleShowInfoClick(department)}\r\n                            >\r\n                                Show All Info\r\n                            </Button>\r\n                            <Checkbox\r\n                                checked={selectedDepartments.includes(department)}\r\n                                onChange={() => handleSelectDepartment(department)}\r\n                            />\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            ))}\r\n\r\n            <Dialog open={isDialogOpen} onClose={handleDialogClose}>\r\n                {/* Cod existent pentru dialogul de ștergere */}\r\n                <DialogTitle>Delete Department</DialogTitle>\r\n                <DialogContent>\r\n                    <Typography>Are you sure you want to delete the department?</Typography>\r\n                    <Typography>{selectedDepartment?.description}</Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleDialogClose}>Cancel</Button>\r\n                    <Button color=\"secondary\" onClick={handleDeleteDepartment}>\r\n                        Delete\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog open={isAddDialogOpen} onClose={handleAddDialogClose}>\r\n                {/* Cod existent pentru dialogul de adăugare */}\r\n                <DialogTitle>Add Department</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        label=\"Description\"\r\n                        fullWidth\r\n                        value={newDepartmentData.description}\r\n                        onChange={(e) => setNewDepartmentData({ ...newDepartmentData, description: e.target.value })}\r\n                    />\r\n                    <TextField\r\n                        label=\"Parent ID\"\r\n                        fullWidth\r\n                        value={newDepartmentData.parentID}\r\n                        onChange={(e) => setNewDepartmentData({ ...newDepartmentData, parentID: e.target.value })}\r\n                    />\r\n                    <TextField\r\n                        label=\"Manager ID\"\r\n                        fullWidth\r\n                        value={newDepartmentData.managerID}\r\n                        onChange={(e) => setNewDepartmentData({ ...newDepartmentData, managerID: e.target.value })}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleAddDialogClose}>Cancel</Button>\r\n                    <Button color=\"primary\" onClick={handleAddDepartment}>\r\n                        Add\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog open={isInfoDialogOpen} onClose={handleInfoDialogClose}>\r\n                <DialogTitle>{selectedDepartment?.description || ''} - All Info</DialogTitle>\r\n                <DialogContent>\r\n                    <Typography>Department ID: {selectedDepartment?.departmentID}</Typography>\r\n                    <Typography>Parent ID: {selectedDepartment?.parentID}</Typography>\r\n                    <Typography>Manager ID: {selectedDepartment?.managerID}</Typography>\r\n                    {/* Adaugă mai multe detalii despre departament aici */}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleInfoDialogClose}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog open={isEmailFormOpen} onClose={() => setIsEmailFormOpen(false)}>\r\n                <DialogTitle>Send Email to Selected Departments</DialogTitle>\r\n                <DialogContent>\r\n                    <EmailForm\r\n                        selectedPersons={selectedDepartments}\r\n                        onClose={() => setIsEmailFormOpen(false)}\r\n                        type=\"department\"\r\n                    />\r\n                </DialogContent>\r\n            </Dialog>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default DepartmentList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}