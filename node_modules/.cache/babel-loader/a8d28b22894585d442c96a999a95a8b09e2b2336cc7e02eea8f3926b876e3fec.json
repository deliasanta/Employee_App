{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\T\\\\WebstormProjects\\\\director-app\\\\src\\\\components\\\\EmployeeList.js\",\n  _s = $RefreshSig$();\n// src/components/EmployeeList.js\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardContent, Typography, Grid } from '@mui/material';\nimport ApiService from '../services/ApiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeList = ({\n  departmentId\n}) => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        if (departmentId) {\n          const response = await ApiService.getEmployeesByDepartment(departmentId);\n          setEmployees(response.data);\n        }\n      } catch (error) {\n        console.error('Error fetching employees:', error);\n      }\n    };\n    fetchData();\n  }, [departmentId]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: employees.map(employee => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 4,\n      lg: 3,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: employee.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this)\n    }, employee.employeeID, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(EmployeeList, \"/A1Ii8+9z2SDNTFDutGp9pjEZTU=\");\n_c = EmployeeList;\nexport default EmployeeList;\nvar _c;\n$RefreshReg$(_c, \"EmployeeList\");","map":{"version":3,"names":["React","useState","useEffect","Card","CardContent","Typography","Grid","ApiService","jsxDEV","_jsxDEV","EmployeeList","departmentId","_s","employees","setEmployees","fetchData","response","getEmployeesByDepartment","data","error","console","container","spacing","children","map","employee","item","xs","sm","md","lg","variant","gutterBottom","name","fileName","_jsxFileName","lineNumber","columnNumber","employeeID","_c","$RefreshReg$"],"sources":["C:/Users/T/WebstormProjects/director-app/src/components/EmployeeList.js"],"sourcesContent":["// src/components/EmployeeList.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    Typography,\r\n    Grid,\r\n} from '@mui/material';\r\nimport ApiService from '../services/ApiService';\r\n\r\nconst EmployeeList = ({ departmentId }) => {\r\n    const [employees, setEmployees] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                if (departmentId) {\r\n                    const response = await ApiService.getEmployeesByDepartment(departmentId);\r\n                    setEmployees(response.data);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching employees:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [departmentId]);\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            {employees.map(employee => (\r\n                <Grid item xs={12} sm={6} md={4} lg={3} key={employee.employeeID}>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <Typography variant=\"h6\" gutterBottom>\r\n                                {employee.name}\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default EmployeeList;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACIC,IAAI,EACJC,WAAW,EACXC,UAAU,EACVC,IAAI,QACD,eAAe;AACtB,OAAOC,UAAU,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACZ,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,IAAIJ,YAAY,EAAE;UACd,MAAMK,QAAQ,GAAG,MAAMT,UAAU,CAACU,wBAAwB,CAACN,YAAY,CAAC;UACxEG,YAAY,CAACE,QAAQ,CAACE,IAAI,CAAC;QAC/B;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACrD;IACJ,CAAC;IAEDJ,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,CAACJ,YAAY,CAAC,CAAC;EAElB,oBACIF,OAAA,CAACH,IAAI;IAACe,SAAS;IAACC,OAAO,EAAE,CAAE;IAAAC,QAAA,EACtBV,SAAS,CAACW,GAAG,CAACC,QAAQ,iBACnBhB,OAAA,CAACH,IAAI;MAACoB,IAAI;MAACC,EAAE,EAAE,EAAG;MAACC,EAAE,EAAE,CAAE;MAACC,EAAE,EAAE,CAAE;MAACC,EAAE,EAAE,CAAE;MAAAP,QAAA,eACnCd,OAAA,CAACN,IAAI;QAAAoB,QAAA,eACDd,OAAA,CAACL,WAAW;UAAAmB,QAAA,eACRd,OAAA,CAACJ,UAAU;YAAC0B,OAAO,EAAC,IAAI;YAACC,YAAY;YAAAT,QAAA,EAChCE,QAAQ,CAACQ;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ;IAAC,GAPkCZ,QAAQ,CAACa,UAAU;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQ1D,CACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEf,CAAC;AAACzB,EAAA,CAjCIF,YAAY;AAAA6B,EAAA,GAAZ7B,YAAY;AAmClB,eAAeA,YAAY;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}