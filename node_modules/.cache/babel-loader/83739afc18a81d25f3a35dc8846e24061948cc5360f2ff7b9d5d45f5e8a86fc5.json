{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\T\\\\WebstormProjects\\\\director-app\\\\src\\\\components\\\\DepartmentList.js\",\n  _s = $RefreshSig$();\n// src/components/DepartmentList.js\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardContent, Button, Typography, Grid, Dialog, DialogTitle, DialogContent, DialogActions } from '@mui/material';\nimport ApiService from '../services/ApiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DepartmentList = () => {\n  _s();\n  const [departments, setDepartments] = useState([]);\n  const [selectedDepartment, setSelectedDepartment] = useState(null);\n  const [deleteResult, setDeleteResult] = useState(null);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  useEffect(() => {\n    ApiService.getDepartments().then(response => setDepartments(response.data)).catch(error => console.error('Error fetching departments:', error));\n  }, []);\n  const handleDepartmentButtonClick = department => {\n    setSelectedDepartment(department);\n    setIsDialogOpen(true);\n  };\n  const handleDialogClose = () => {\n    setIsDialogOpen(false);\n    setDeleteResult(null);\n    setSelectedDepartment(null);\n  };\n  const handleDeleteDepartment = () => {\n    ApiService.deleteDepartment(selectedDepartment.departmentID).then(() => {\n      setDepartments(departments.filter(dep => dep.departmentID !== selectedDepartment.departmentID));\n      setDeleteResult('Department deleted successfully.');\n    }).catch(error => {\n      console.error('Error deleting department:', error);\n      setDeleteResult('Error deleting department.');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: [departments.map(department => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 4,\n      lg: 3,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: department.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"secondary\",\n            onClick: () => handleDepartmentButtonClick(department),\n            children: \"Delete Department\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this)\n    }, department.departmentID, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isDialogOpen,\n      onClose: handleDialogClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Delete Department\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: deleteResult ? /*#__PURE__*/_jsxDEV(Typography, {\n          children: deleteResult\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n          children: `Are you sure you want to delete the department \"${(selectedDepartment === null || selectedDepartment === void 0 ? void 0 : selectedDepartment.description) || ''}\"?`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: !deleteResult && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleDialogClose,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleDeleteDepartment,\n            color: \"secondary\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(DepartmentList, \"/JcmmWq5csHNFOChCqm+vimk6gU=\");\n_c = DepartmentList;\nexport default DepartmentList;\nvar _c;\n$RefreshReg$(_c, \"DepartmentList\");","map":{"version":3,"names":["React","useState","useEffect","Card","CardContent","Button","Typography","Grid","Dialog","DialogTitle","DialogContent","DialogActions","ApiService","jsxDEV","_jsxDEV","Fragment","_Fragment","DepartmentList","_s","departments","setDepartments","selectedDepartment","setSelectedDepartment","deleteResult","setDeleteResult","isDialogOpen","setIsDialogOpen","getDepartments","then","response","data","catch","error","console","handleDepartmentButtonClick","department","handleDialogClose","handleDeleteDepartment","deleteDepartment","departmentID","filter","dep","container","spacing","children","map","item","xs","sm","md","lg","variant","gutterBottom","description","fileName","_jsxFileName","lineNumber","columnNumber","color","onClick","open","onClose","_c","$RefreshReg$"],"sources":["C:/Users/T/WebstormProjects/director-app/src/components/DepartmentList.js"],"sourcesContent":["// src/components/DepartmentList.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    Button,\r\n    Typography,\r\n    Grid,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n} from '@mui/material';\r\nimport ApiService from '../services/ApiService';\r\n\r\nconst DepartmentList = () => {\r\n    const [departments, setDepartments] = useState([]);\r\n    const [selectedDepartment, setSelectedDepartment] = useState(null);\r\n    const [deleteResult, setDeleteResult] = useState(null);\r\n    const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        ApiService.getDepartments()\r\n            .then(response => setDepartments(response.data))\r\n            .catch(error => console.error('Error fetching departments:', error));\r\n    }, []);\r\n\r\n    const handleDepartmentButtonClick = (department) => {\r\n        setSelectedDepartment(department);\r\n        setIsDialogOpen(true);\r\n    };\r\n\r\n    const handleDialogClose = () => {\r\n        setIsDialogOpen(false);\r\n        setDeleteResult(null);\r\n        setSelectedDepartment(null);\r\n    };\r\n\r\n    const handleDeleteDepartment = () => {\r\n        ApiService.deleteDepartment(selectedDepartment.departmentID)\r\n            .then(() => {\r\n                setDepartments(departments.filter(dep => dep.departmentID !== selectedDepartment.departmentID));\r\n                setDeleteResult('Department deleted successfully.');\r\n            })\r\n            .catch(error => {\r\n                console.error('Error deleting department:', error);\r\n                setDeleteResult('Error deleting department.');\r\n            });\r\n    };\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            {departments.map(department => (\r\n                <Grid item xs={12} sm={6} md={4} lg={3} key={department.departmentID}>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <Typography variant=\"h6\" gutterBottom>\r\n                                {department.description}\r\n                            </Typography>\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                color=\"secondary\"\r\n                                onClick={() => handleDepartmentButtonClick(department)}\r\n                            >\r\n                                Delete Department\r\n                            </Button>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            ))}\r\n\r\n            <Dialog open={isDialogOpen} onClose={handleDialogClose}>\r\n                <DialogTitle>Delete Department</DialogTitle>\r\n                <DialogContent>\r\n                    {deleteResult ? (\r\n                        <Typography>{deleteResult}</Typography>\r\n                    ) : (\r\n                        <Typography>{`Are you sure you want to delete the department \"${selectedDepartment?.description || ''}\"?`}</Typography>\r\n                    )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    {!deleteResult && (\r\n                        <>\r\n                            <Button onClick={handleDialogClose}>Cancel</Button>\r\n                            <Button onClick={handleDeleteDepartment} color=\"secondary\">\r\n                                Delete\r\n                            </Button>\r\n                        </>\r\n                    )}\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default DepartmentList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}