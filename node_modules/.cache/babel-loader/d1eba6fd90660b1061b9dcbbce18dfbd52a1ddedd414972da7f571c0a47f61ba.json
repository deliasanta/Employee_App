{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\T\\\\WebstormProjects\\\\director-app\\\\src\\\\components\\\\EmployeeList.js\",\n  _s = $RefreshSig$();\n// src/components/EmployeeList.js\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardContent, Typography, Grid, Button, Dialog, DialogTitle, DialogContent, TextField } from '@mui/material';\nimport ApiService from '../services/ApiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeList = () => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [openAddEmployeeDialog, setOpenAddEmployeeDialog] = useState(false);\n  const [newEmployee, setNewEmployee] = useState({\n    id: '',\n    name: '',\n    managerID: '',\n    email: ''\n  });\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [deleteResult, setDeleteResult] = useState(null);\n  const [isInfoDialogOpen, setIsInfoDialogOpen] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await ApiService.getEmployees();\n        setEmployees(response.data);\n      } catch (error) {\n        console.error('Error fetching employees:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleAddEmployeeClick = () => {\n    setOpenAddEmployeeDialog(true);\n  };\n  const handleDialogClose = () => {\n    setOpenAddEmployeeDialog(false);\n    setDeleteResult(null);\n    setSelectedEmployee(null);\n  };\n  const handleDeleteEmployee = async () => {\n    try {\n      await ApiService.deleteEmployee(selectedEmployee.id);\n      // Re-fetch employees after deleting one\n      const response = await ApiService.getEmployees();\n      setEmployees(response.data);\n      setDeleteResult('Employee deleted successfully.');\n    } catch (error) {\n      console.error('Error deleting employee:', error);\n      setDeleteResult('Error deleting employee.');\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewEmployee({\n      ...newEmployee,\n      [name]: value\n    });\n  };\n  const handleAddEmployee = async () => {\n    try {\n      await ApiService.addEmployee(newEmployee);\n      // Re-fetch employees after adding a new one\n      const response = await ApiService.getEmployees();\n      setEmployees(response.data);\n      setOpenAddEmployeeDialog(false);\n      // Reset the newEmployee state\n      setNewEmployee({\n        id: '',\n        name: '',\n        managerID: '',\n        email: ''\n      });\n    } catch (error) {\n      console.error('Error adding employee:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: employees.map(employee => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: employee.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this)\n      }, employee.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleAddEmployeeClick,\n      children: \"Add Employee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openAddEmployeeDialog,\n      onClose: handleDialogClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Add Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"ID\",\n          name: \"id\",\n          value: newEmployee.id,\n          onChange: handleInputChange,\n          fullWidth: true,\n          margin: \"normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Name\",\n          name: \"name\",\n          value: newEmployee.name,\n          onChange: handleInputChange,\n          fullWidth: true,\n          margin: \"normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Manager ID\",\n          name: \"managerID\",\n          value: newEmployee.managerID,\n          onChange: handleInputChange,\n          fullWidth: true,\n          margin: \"normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Email\",\n          name: \"email\",\n          value: newEmployee.email,\n          onChange: handleInputChange,\n          fullWidth: true,\n          margin: \"normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleAddEmployee,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(EmployeeList, \"uVBPMxhL6SYd8msrITJCEgiwKVc=\");\n_c = EmployeeList;\nexport default EmployeeList;\nvar _c;\n$RefreshReg$(_c, \"EmployeeList\");","map":{"version":3,"names":["React","useState","useEffect","Card","CardContent","Typography","Grid","Button","Dialog","DialogTitle","DialogContent","TextField","ApiService","jsxDEV","_jsxDEV","EmployeeList","_s","employees","setEmployees","openAddEmployeeDialog","setOpenAddEmployeeDialog","newEmployee","setNewEmployee","id","name","managerID","email","selectedEmployee","setSelectedEmployee","deleteResult","setDeleteResult","isInfoDialogOpen","setIsInfoDialogOpen","fetchData","response","getEmployees","data","error","console","handleAddEmployeeClick","handleDialogClose","handleDeleteEmployee","deleteEmployee","handleInputChange","e","value","target","handleAddEmployee","addEmployee","children","container","spacing","map","employee","item","xs","sm","md","lg","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","onClick","open","onClose","label","onChange","fullWidth","margin","_c","$RefreshReg$"],"sources":["C:/Users/T/WebstormProjects/director-app/src/components/EmployeeList.js"],"sourcesContent":["// src/components/EmployeeList.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, Typography, Grid, Button, Dialog, DialogTitle, DialogContent, TextField } from '@mui/material';\r\nimport ApiService from '../services/ApiService';\r\n\r\nconst EmployeeList = () => {\r\n    const [employees, setEmployees] = useState([]);\r\n    const [openAddEmployeeDialog, setOpenAddEmployeeDialog] = useState(false);\r\n    const [newEmployee, setNewEmployee] = useState({ id: '', name: '', managerID: '', email: '' });\r\n    const [selectedEmployee, setSelectedEmployee] = useState(null);\r\n    const [deleteResult, setDeleteResult] = useState(null);\r\n    const [isInfoDialogOpen, setIsInfoDialogOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await ApiService.getEmployees();\r\n                setEmployees(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching employees:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    const handleAddEmployeeClick = () => {\r\n        setOpenAddEmployeeDialog(true);\r\n    };\r\n\r\n    const handleDialogClose = () => {\r\n        setOpenAddEmployeeDialog(false);\r\n        setDeleteResult(null);\r\n        setSelectedEmployee(null);\r\n    };\r\n    const handleDeleteEmployee = async () => {\r\n        try {\r\n            await ApiService.deleteEmployee(selectedEmployee.id);\r\n            // Re-fetch employees after deleting one\r\n            const response = await ApiService.getEmployees();\r\n            setEmployees(response.data);\r\n            setDeleteResult('Employee deleted successfully.');\r\n        } catch (error) {\r\n            console.error('Error deleting employee:', error);\r\n            setDeleteResult('Error deleting employee.');\r\n        }\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setNewEmployee({ ...newEmployee, [name]: value });\r\n    };\r\n\r\n    const handleAddEmployee = async () => {\r\n        try {\r\n            await ApiService.addEmployee(newEmployee);\r\n            // Re-fetch employees after adding a new one\r\n            const response = await ApiService.getEmployees();\r\n            setEmployees(response.data);\r\n            setOpenAddEmployeeDialog(false);\r\n            // Reset the newEmployee state\r\n            setNewEmployee({ id: '', name: '', managerID: '', email: '' });\r\n        } catch (error) {\r\n            console.error('Error adding employee:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Grid container spacing={2}>\r\n                {employees.map(employee => (\r\n                    <Grid item xs={12} sm={6} md={4} lg={3} key={employee.id}>\r\n                        <Card>\r\n                            <CardContent>\r\n                                <Typography variant=\"h6\" gutterBottom>\r\n                                    {employee.name}\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n\r\n\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleAddEmployeeClick}>\r\n                Add Employee\r\n            </Button>\r\n            <Dialog open={openAddEmployeeDialog} onClose={handleDialogClose}>\r\n                <DialogTitle>Add Employee</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        label=\"ID\"\r\n                        name=\"id\"\r\n                        value={newEmployee.id}\r\n                        onChange={handleInputChange}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                    />\r\n                    <TextField\r\n                        label=\"Name\"\r\n                        name=\"name\"\r\n                        value={newEmployee.name}\r\n                        onChange={handleInputChange}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                    />\r\n                    <TextField\r\n                        label=\"Manager ID\"\r\n                        name=\"managerID\"\r\n                        value={newEmployee.managerID}\r\n                        onChange={handleInputChange}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                    />\r\n                    <TextField\r\n                        label=\"Email\"\r\n                        name=\"email\"\r\n                        value={newEmployee.email}\r\n                        onChange={handleInputChange}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                    />\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleAddEmployee}>\r\n                        Add\r\n                    </Button>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EmployeeList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}