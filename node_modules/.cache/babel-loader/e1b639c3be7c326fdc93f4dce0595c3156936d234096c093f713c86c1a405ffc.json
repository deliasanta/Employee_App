{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\T\\\\WebstormProjects\\\\director-app\\\\src\\\\components\\\\EmployeeList.js\",\n  _s = $RefreshSig$();\n// src/components/EmployeeList.js\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardContent, Typography, Grid, Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField } from '@mui/material';\nimport ApiService from '../services/ApiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeList = () => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [isAddDialogOpen, setIsAddDialogOpen] = useState(false);\n  const [newEmployeeData, setNewEmployeeData] = useState({\n    name: ''\n    // Alte câmpuri ale angajatului\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await ApiService.getEmployees();\n        setEmployees(response.data);\n      } catch (error) {\n        console.error('Error fetching employees:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleAddDialogClick = () => {\n    setIsAddDialogOpen(true);\n  };\n  const handleAddDialogClose = () => {\n    setIsAddDialogOpen(false);\n    setNewEmployeeData({\n      name: ''\n      // Resetare pentru alte câmpuri ale angajatului\n    });\n  };\n  const handleAddEmployee = () => {\n    ApiService.addEmployee(newEmployeeData).then(response => {\n      setEmployees([...employees, response.data]);\n      setIsAddDialogOpen(false);\n      setNewEmployeeData({\n        name: ''\n        // Resetare pentru alte câmpuri ale angajatului\n      });\n    }).catch(error => console.error('Error adding employee:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleAddDialogClick,\n      children: \"Add Employee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: employees.map(employee => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: employee.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this)\n      }, employee.employeeID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isAddDialogOpen,\n      onClose: handleAddDialogClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Add Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Name\",\n          fullWidth: true,\n          value: newEmployeeData.name,\n          onChange: e => setNewEmployeeData({\n            ...newEmployeeData,\n            name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleAddDialogClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: handleAddEmployee,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(EmployeeList, \"drqpOO+4LwiRFB3bdDJBsZbRFKk=\");\n_c = EmployeeList;\nexport default EmployeeList;\nvar _c;\n$RefreshReg$(_c, \"EmployeeList\");","map":{"version":3,"names":["React","useState","useEffect","Card","CardContent","Typography","Grid","Button","Dialog","DialogTitle","DialogContent","DialogActions","TextField","ApiService","jsxDEV","_jsxDEV","EmployeeList","_s","employees","setEmployees","isAddDialogOpen","setIsAddDialogOpen","newEmployeeData","setNewEmployeeData","name","fetchData","response","getEmployees","data","error","console","handleAddDialogClick","handleAddDialogClose","handleAddEmployee","addEmployee","then","catch","children","variant","color","onClick","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","map","employee","item","xs","sm","md","lg","gutterBottom","employeeID","open","onClose","label","fullWidth","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/T/WebstormProjects/director-app/src/components/EmployeeList.js"],"sourcesContent":["// src/components/EmployeeList.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, Typography, Grid, Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField } from '@mui/material';\r\nimport ApiService from '../services/ApiService';\r\n\r\nconst EmployeeList = () => {\r\n    const [employees, setEmployees] = useState([]);\r\n    const [isAddDialogOpen, setIsAddDialogOpen] = useState(false);\r\n    const [newEmployeeData, setNewEmployeeData] = useState({\r\n        name: '',\r\n        // Alte câmpuri ale angajatului\r\n    });\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await ApiService.getEmployees();\r\n                setEmployees(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching employees:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    const handleAddDialogClick = () => {\r\n        setIsAddDialogOpen(true);\r\n    };\r\n\r\n    const handleAddDialogClose = () => {\r\n        setIsAddDialogOpen(false);\r\n        setNewEmployeeData({\r\n            name: '',\r\n            // Resetare pentru alte câmpuri ale angajatului\r\n        });\r\n    };\r\n\r\n    const handleAddEmployee = () => {\r\n        ApiService.addEmployee(newEmployeeData)\r\n            .then(response => {\r\n                setEmployees([...employees, response.data]);\r\n                setIsAddDialogOpen(false);\r\n                setNewEmployeeData({\r\n                    name: '',\r\n                    // Resetare pentru alte câmpuri ale angajatului\r\n                });\r\n            })\r\n            .catch(error => console.error('Error adding employee:', error));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleAddDialogClick}>\r\n                Add Employee\r\n            </Button>\r\n\r\n            <Grid container spacing={2}>\r\n                {employees.map(employee => (\r\n                    <Grid item xs={12} sm={6} md={4} lg={3} key={employee.employeeID}>\r\n                        <Card>\r\n                            <CardContent>\r\n                                <Typography variant=\"h6\" gutterBottom>\r\n                                    {employee.name}\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n\r\n            <Dialog open={isAddDialogOpen} onClose={handleAddDialogClose}>\r\n                <DialogTitle>Add Employee</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        label=\"Name\"\r\n                        fullWidth\r\n                        value={newEmployeeData.name}\r\n                        onChange={(e) => setNewEmployeeData({ ...newEmployeeData, name: e.target.value })}\r\n                    />\r\n                    {/* Alte câmpuri pentru angajat */}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleAddDialogClose}>Cancel</Button>\r\n                    <Button color=\"primary\" onClick={handleAddEmployee}>\r\n                        Add\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EmployeeList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}