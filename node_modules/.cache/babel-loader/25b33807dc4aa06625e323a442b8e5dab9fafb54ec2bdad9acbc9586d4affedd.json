{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\T\\\\WebstormProjects\\\\director-app\\\\src\\\\components\\\\EmployeeList.js\",\n  _s = $RefreshSig$();\n// src/components/EmployeeList.js\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardContent, Typography, Grid, Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField, Checkbox } from '@mui/material';\nimport ApiService from '../services/ApiService';\nimport EmailForm from './EmailForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeList = () => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [deleteResult, setDeleteResult] = useState(null);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [isAddDialogOpen, setIsAddDialogOpen] = useState(false);\n  const [isInfoDialogOpen, setIsInfoDialogOpen] = useState(false);\n  const [isEmailFormOpen, setIsEmailFormOpen] = useState(false);\n  const [newEmployeeData, setNewEmployeeData] = useState({\n    id: '',\n    name: '',\n    managerID: '',\n    email: ''\n  });\n  const [selectedPersons, setSelectedPersons] = useState([]);\n  useEffect(() => {\n    ApiService.getEmployees().then(response => setEmployees(response.data)).catch(error => console.error('Error fetching employees:', error));\n  }, []);\n  const handleEmployeeButtonClick = employee => {\n    setSelectedEmployee(employee);\n    setIsDialogOpen(true);\n  };\n  const handleDialogClose = () => {\n    setIsDialogOpen(false);\n    setDeleteResult(null);\n    setSelectedEmployee(null);\n  };\n  const handleDeleteEmployee = () => {\n    ApiService.deleteEmployee(selectedEmployee.id).then(() => {\n      setEmployees(employees.filter(emp => emp.id !== selectedEmployee.id));\n      setDeleteResult('Employee deleted successfully.');\n    }).catch(error => {\n      console.error('Error deleting employee:', error);\n      setDeleteResult('Error deleting employee.');\n    });\n  };\n  const handleAddDialogClick = () => {\n    setIsAddDialogOpen(true);\n  };\n  const handleAddDialogClose = () => {\n    setIsAddDialogOpen(false);\n    setNewEmployeeData({\n      id: '',\n      name: '',\n      managerID: '',\n      email: ''\n    });\n  };\n  const handleAddEmployee = () => {\n    ApiService.addEmployee(newEmployeeData).then(response => {\n      setEmployees([...employees, response.data]);\n      setIsAddDialogOpen(false);\n      setNewEmployeeData({\n        id: '',\n        name: '',\n        managerID: '',\n        email: ''\n      });\n    }).catch(error => console.error('Error adding employee:', error));\n  };\n  const handleShowInfoClick = async employee => {\n    try {\n      const response = await ApiService.getEmployee(employee.id);\n      setSelectedEmployee(employee);\n      setIsInfoDialogOpen(true);\n      // You can use response.data to display additional employee details\n    } catch (error) {\n      console.error('Error fetching employee details:', error);\n    }\n  };\n  const handleInfoDialogClose = () => {\n    setIsInfoDialogOpen(false);\n    setSelectedEmployee(null);\n  };\n  const handleSelectPerson = employee => {\n    setSelectedPersons(prevSelected => {\n      if (prevSelected.includes(employee)) {\n        return prevSelected.filter(selectedPerson => selectedPerson !== employee);\n      } else {\n        return [...prevSelected, employee];\n      }\n    });\n  };\n  const handleSendEmailClick = () => {\n    if (selectedPersons.length > 0) {\n      // Open the email form with selected persons\n      // Pass onClose callback to handle closing the email form\n      setIsEmailFormOpen(true);\n    } else {\n      console.warn('No persons selected for email');\n    }\n  };\n  const handleSendEmailToSelected = async (subject, message) => {\n    try {\n      // Build a list of selected employee IDs\n      const selectedEmployeeIds = selectedPersons.map(employee => employee.id);\n\n      // Send email to selected employees\n      await ApiService.sendEmailToSelected(subject, message, selectedEmployeeIds);\n\n      // Clear selected employees and close the dialog after sending email\n      setSelectedPersons([]);\n      setIsEmailFormOpen(false);\n      console.log('Email sent successfully!');\n    } catch (error) {\n      console.error('Error sending email:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleAddDialogClick,\n        children: \"Add Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleSendEmailClick,\n        children: \"Send Email to Selected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this), employees.map(employee => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 4,\n      lg: 3,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: employee.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: [\"Email: \", employee.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: [\"Manager: \", employee.manager ? employee.manager.name : 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: selectedPersons.includes(employee),\n            onChange: () => handleSelectPerson(employee)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleEmployeeButtonClick(employee),\n            children: \"Edit / Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleShowInfoClick(employee),\n            children: \"Show Info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }, this)\n    }, employee.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isDialogOpen,\n      onClose: handleDialogClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Edit / Delete Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: selectedEmployee === null || selectedEmployee === void 0 ? void 0 : selectedEmployee.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: [\"Email: \", selectedEmployee === null || selectedEmployee === void 0 ? void 0 : selectedEmployee.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: [\"Manager: \", selectedEmployee !== null && selectedEmployee !== void 0 && selectedEmployee.manager ? selectedEmployee.manager.name : 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this), deleteResult && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: deleteResult\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDeleteEmployee,\n          color: \"secondary\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDialogClose,\n          color: \"primary\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isAddDialogOpen,\n      onClose: handleAddDialogClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Add Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Name\",\n          value: newEmployeeData.name,\n          onChange: e => setNewEmployeeData({\n            ...newEmployeeData,\n            name: e.target.value\n          }),\n          fullWidth: true,\n          margin: \"normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Email\",\n          value: newEmployeeData.email,\n          onChange: e => setNewEmployeeData({\n            ...newEmployeeData,\n            email: e.target.value\n          }),\n          fullWidth: true,\n          margin: \"normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleAddEmployee,\n          color: \"primary\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleAddDialogClose,\n          color: \"secondary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isInfoDialogOpen,\n      onClose: handleInfoDialogClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Employee Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: selectedEmployee === null || selectedEmployee === void 0 ? void 0 : selectedEmployee.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: [\"Email: \", selectedEmployee === null || selectedEmployee === void 0 ? void 0 : selectedEmployee.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: [\"Manager: \", selectedEmployee !== null && selectedEmployee !== void 0 && selectedEmployee.manager ? selectedEmployee.manager.name : 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleInfoDialogClose,\n          color: \"primary\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }, this), isEmailFormOpen && /*#__PURE__*/_jsxDEV(EmailForm, {\n      selectedPersons: selectedPersons,\n      onClose: handleSendEmailToSelected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 9\n  }, this);\n};\n_s(EmployeeList, \"U/pul2auityMoAvKkn1PyHVZsvU=\");\n_c = EmployeeList;\nexport default EmployeeList;\nvar _c;\n$RefreshReg$(_c, \"EmployeeList\");","map":{"version":3,"names":["React","useState","useEffect","Card","CardContent","Typography","Grid","Button","Dialog","DialogTitle","DialogContent","DialogActions","TextField","Checkbox","ApiService","EmailForm","jsxDEV","_jsxDEV","EmployeeList","_s","employees","setEmployees","selectedEmployee","setSelectedEmployee","deleteResult","setDeleteResult","isDialogOpen","setIsDialogOpen","isAddDialogOpen","setIsAddDialogOpen","isInfoDialogOpen","setIsInfoDialogOpen","isEmailFormOpen","setIsEmailFormOpen","newEmployeeData","setNewEmployeeData","id","name","managerID","email","selectedPersons","setSelectedPersons","getEmployees","then","response","data","catch","error","console","handleEmployeeButtonClick","employee","handleDialogClose","handleDeleteEmployee","deleteEmployee","filter","emp","handleAddDialogClick","handleAddDialogClose","handleAddEmployee","addEmployee","handleShowInfoClick","getEmployee","handleInfoDialogClose","handleSelectPerson","prevSelected","includes","selectedPerson","handleSendEmailClick","length","warn","handleSendEmailToSelected","subject","message","selectedEmployeeIds","map","sendEmailToSelected","log","container","spacing","children","item","xs","variant","color","onClick","fileName","_jsxFileName","lineNumber","columnNumber","sm","md","lg","manager","checked","onChange","open","onClose","label","value","e","target","fullWidth","margin","_c","$RefreshReg$"],"sources":["C:/Users/T/WebstormProjects/director-app/src/components/EmployeeList.js"],"sourcesContent":["// src/components/EmployeeList.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    Typography,\r\n    Grid,\r\n    Button,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    TextField,\r\n    Checkbox,\r\n} from '@mui/material';\r\nimport ApiService from '../services/ApiService';\r\nimport EmailForm from './EmailForm';\r\n\r\nconst EmployeeList = () => {\r\n    const [employees, setEmployees] = useState([]);\r\n    const [selectedEmployee, setSelectedEmployee] = useState(null);\r\n    const [deleteResult, setDeleteResult] = useState(null);\r\n    const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n    const [isAddDialogOpen, setIsAddDialogOpen] = useState(false);\r\n    const [isInfoDialogOpen, setIsInfoDialogOpen] = useState(false);\r\n    const [isEmailFormOpen, setIsEmailFormOpen] = useState(false);\r\n    const [newEmployeeData, setNewEmployeeData] = useState({\r\n        id: '',\r\n        name: '',\r\n        managerID: '',\r\n        email: '',\r\n    });\r\n    const [selectedPersons, setSelectedPersons] = useState([]);\r\n\r\n    useEffect(() => {\r\n        ApiService.getEmployees()\r\n            .then((response) => setEmployees(response.data))\r\n            .catch((error) => console.error('Error fetching employees:', error));\r\n    }, []);\r\n\r\n    const handleEmployeeButtonClick = (employee) => {\r\n        setSelectedEmployee(employee);\r\n        setIsDialogOpen(true);\r\n    };\r\n\r\n    const handleDialogClose = () => {\r\n        setIsDialogOpen(false);\r\n        setDeleteResult(null);\r\n        setSelectedEmployee(null);\r\n    };\r\n\r\n    const handleDeleteEmployee = () => {\r\n        ApiService.deleteEmployee(selectedEmployee.id)\r\n            .then(() => {\r\n                setEmployees(employees.filter((emp) => emp.id !== selectedEmployee.id));\r\n                setDeleteResult('Employee deleted successfully.');\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error deleting employee:', error);\r\n                setDeleteResult('Error deleting employee.');\r\n            });\r\n    };\r\n\r\n    const handleAddDialogClick = () => {\r\n        setIsAddDialogOpen(true);\r\n    };\r\n\r\n    const handleAddDialogClose = () => {\r\n        setIsAddDialogOpen(false);\r\n        setNewEmployeeData({\r\n            id: '',\r\n            name: '',\r\n            managerID: '',\r\n            email: '',\r\n        });\r\n    };\r\n\r\n    const handleAddEmployee = () => {\r\n        ApiService.addEmployee(newEmployeeData)\r\n            .then((response) => {\r\n                setEmployees([...employees, response.data]);\r\n                setIsAddDialogOpen(false);\r\n                setNewEmployeeData({\r\n                    id: '',\r\n                    name: '',\r\n                    managerID: '',\r\n                    email: '',\r\n                });\r\n            })\r\n            .catch((error) => console.error('Error adding employee:', error));\r\n    };\r\n\r\n    const handleShowInfoClick = async (employee) => {\r\n        try {\r\n            const response = await ApiService.getEmployee(employee.id);\r\n            setSelectedEmployee(employee);\r\n            setIsInfoDialogOpen(true);\r\n            // You can use response.data to display additional employee details\r\n        } catch (error) {\r\n            console.error('Error fetching employee details:', error);\r\n        }\r\n    };\r\n\r\n    const handleInfoDialogClose = () => {\r\n        setIsInfoDialogOpen(false);\r\n        setSelectedEmployee(null);\r\n    };\r\n\r\n    const handleSelectPerson = (employee) => {\r\n        setSelectedPersons((prevSelected) => {\r\n            if (prevSelected.includes(employee)) {\r\n                return prevSelected.filter((selectedPerson) => selectedPerson !== employee);\r\n            } else {\r\n                return [...prevSelected, employee];\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleSendEmailClick = () => {\r\n        if (selectedPersons.length > 0) {\r\n            // Open the email form with selected persons\r\n            // Pass onClose callback to handle closing the email form\r\n            setIsEmailFormOpen(true);\r\n        } else {\r\n            console.warn('No persons selected for email');\r\n        }\r\n    };\r\n\r\n    const handleSendEmailToSelected = async (subject, message) => {\r\n        try {\r\n            // Build a list of selected employee IDs\r\n            const selectedEmployeeIds = selectedPersons.map((employee) => employee.id);\r\n\r\n            // Send email to selected employees\r\n            await ApiService.sendEmailToSelected(subject, message, selectedEmployeeIds);\r\n\r\n            // Clear selected employees and close the dialog after sending email\r\n            setSelectedPersons([]);\r\n            setIsEmailFormOpen(false);\r\n\r\n            console.log('Email sent successfully!');\r\n        } catch (error) {\r\n            console.error('Error sending email:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={handleAddDialogClick}>\r\n                    Add Employee\r\n                </Button>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={handleSendEmailClick}>\r\n                    Send Email to Selected\r\n                </Button>\r\n            </Grid>\r\n            {employees.map((employee) => (\r\n                <Grid item key={employee.id} xs={12} sm={6} md={4} lg={3}>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <Typography variant=\"h6\">{employee.name}</Typography>\r\n                            <Typography variant=\"body2\">Email: {employee.email}</Typography>\r\n                            <Typography variant=\"body2\">\r\n                                Manager: {employee.manager ? employee.manager.name : 'N/A'}\r\n                            </Typography>\r\n                            <Checkbox\r\n                                checked={selectedPersons.includes(employee)}\r\n                                onChange={() => handleSelectPerson(employee)}\r\n                            />\r\n                            <Button onClick={() => handleEmployeeButtonClick(employee)}>\r\n                                Edit / Delete\r\n                            </Button>\r\n                            <Button onClick={() => handleShowInfoClick(employee)}>Show Info</Button>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            ))}\r\n            <Dialog open={isDialogOpen} onClose={handleDialogClose}>\r\n                <DialogTitle>Edit / Delete Employee</DialogTitle>\r\n                <DialogContent>\r\n                    <Typography variant=\"h6\">{selectedEmployee?.name}</Typography>\r\n                    <Typography variant=\"body2\">Email: {selectedEmployee?.email}</Typography>\r\n                    <Typography variant=\"body2\">\r\n                        Manager: {selectedEmployee?.manager ? selectedEmployee.manager.name : 'N/A'}\r\n                    </Typography>\r\n                    {deleteResult && <Typography variant=\"body2\">{deleteResult}</Typography>}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleDeleteEmployee} color=\"secondary\">\r\n                        Delete\r\n                    </Button>\r\n                    <Button onClick={handleDialogClose} color=\"primary\">\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog open={isAddDialogOpen} onClose={handleAddDialogClose}>\r\n                <DialogTitle>Add Employee</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        label=\"Name\"\r\n                        value={newEmployeeData.name}\r\n                        onChange={(e) => setNewEmployeeData({ ...newEmployeeData, name: e.target.value })}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                    />\r\n                    <TextField\r\n                        label=\"Email\"\r\n                        value={newEmployeeData.email}\r\n                        onChange={(e) => setNewEmployeeData({ ...newEmployeeData, email: e.target.value })}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleAddEmployee} color=\"primary\">\r\n                        Add\r\n                    </Button>\r\n                    <Button onClick={handleAddDialogClose} color=\"secondary\">\r\n                        Cancel\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog open={isInfoDialogOpen} onClose={handleInfoDialogClose}>\r\n                <DialogTitle>Employee Details</DialogTitle>\r\n                <DialogContent>\r\n                    {/* Display additional employee details here if needed */}\r\n                    <Typography variant=\"h6\">{selectedEmployee?.name}</Typography>\r\n                    <Typography variant=\"body2\">Email: {selectedEmployee?.email}</Typography>\r\n                    <Typography variant=\"body2\">\r\n                        Manager: {selectedEmployee?.manager ? selectedEmployee.manager.name : 'N/A'}\r\n                    </Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleInfoDialogClose} color=\"primary\">\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            {isEmailFormOpen && (\r\n                <EmailForm selectedPersons={selectedPersons} onClose={handleSendEmailToSelected} />\r\n            )}\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default EmployeeList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}