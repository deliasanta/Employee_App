{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\T\\\\WebstormProjects\\\\director-app\\\\src\\\\components\\\\EmployeeList.js\",\n  _s = $RefreshSig$();\n// src/components/EmployeeList.js\nimport React, { useState, useEffect } from 'react';\nimport { Button, Dialog, DialogTitle, DialogContent, DialogActions, Typography, Grid, TextField } from '@mui/material';\nimport ApiService from '../services/ApiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeList = ({\n  departmentId\n}) => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [isDeleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [isInfoDialogOpen, setInfoDialogOpen] = useState(false);\n  useEffect(() => {\n    if (departmentId !== undefined) {\n      ApiService.getEmployeesByDepartment(departmentId).then(response => setEmployees(response.data)).catch(error => console.error('Error fetching employees:', error));\n    }\n  }, [departmentId]);\n  const handleDeleteEmployee = employeeId => {\n    setDeleteDialogOpen(true);\n    setSelectedEmployee(employeeId);\n  };\n  const handleConfirmDelete = () => {\n    ApiService.deleteEmployee(selectedEmployee).then(() => {\n      setEmployees(employees.filter(employee => employee.id !== selectedEmployee));\n      setDeleteDialogOpen(false);\n      setSelectedEmployee(null);\n    }).catch(error => console.error('Error deleting employee:', error));\n  };\n  const handleShowDetails = employeeId => {\n    setInfoDialogOpen(true);\n    setSelectedEmployee(employeeId);\n  };\n  const handleCloseDialogs = () => {\n    setDeleteDialogOpen(false);\n    setInfoDialogOpen(false);\n    setSelectedEmployee(null);\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: [employees.map(employee => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 4,\n      lg: 3,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: employee.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"secondary\",\n            onClick: () => handleDeleteEmployee(employee.id),\n            children: \"Delete Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"primary\",\n            onClick: () => handleShowDetails(employee.id),\n            children: \"Show Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)\n    }, employee.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isDeleteDialogOpen,\n      onClose: handleCloseDialogs,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Delete Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Are you sure you want to delete this employee?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseDialogs,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          onClick: handleConfirmDelete,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isInfoDialogOpen,\n      onClose: handleCloseDialogs,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Employee Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"ID: \", selectedEmployee]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseDialogs,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(EmployeeList, \"RSfZDvzxjJPNpugpyWkWA1iZ/Iw=\");\n_c = EmployeeList;\nexport default EmployeeList;\nvar _c;\n$RefreshReg$(_c, \"EmployeeList\");","map":{"version":3,"names":["React","useState","useEffect","Button","Dialog","DialogTitle","DialogContent","DialogActions","Typography","Grid","TextField","ApiService","jsxDEV","_jsxDEV","EmployeeList","departmentId","_s","employees","setEmployees","selectedEmployee","setSelectedEmployee","isDeleteDialogOpen","setDeleteDialogOpen","isInfoDialogOpen","setInfoDialogOpen","undefined","getEmployeesByDepartment","then","response","data","catch","error","console","handleDeleteEmployee","employeeId","handleConfirmDelete","deleteEmployee","filter","employee","id","handleShowDetails","handleCloseDialogs","container","spacing","children","map","item","xs","sm","md","lg","Card","CardContent","variant","gutterBottom","name","fileName","_jsxFileName","lineNumber","columnNumber","color","onClick","open","onClose","_c","$RefreshReg$"],"sources":["C:/Users/T/WebstormProjects/director-app/src/components/EmployeeList.js"],"sourcesContent":["// src/components/EmployeeList.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    Typography,\r\n    Grid,\r\n    TextField,\r\n} from '@mui/material';\r\nimport ApiService from '../services/ApiService';\r\n\r\nconst EmployeeList = ({ departmentId }) => {\r\n    const [employees, setEmployees] = useState([]);\r\n    const [selectedEmployee, setSelectedEmployee] = useState(null);\r\n    const [isDeleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n    const [isInfoDialogOpen, setInfoDialogOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (departmentId !== undefined) {\r\n            ApiService.getEmployeesByDepartment(departmentId)\r\n                .then(response => setEmployees(response.data))\r\n                .catch(error => console.error('Error fetching employees:', error));\r\n        }\r\n    }, [departmentId]);\r\n\r\n    const handleDeleteEmployee = (employeeId) => {\r\n        setDeleteDialogOpen(true);\r\n        setSelectedEmployee(employeeId);\r\n    };\r\n\r\n    const handleConfirmDelete = () => {\r\n        ApiService.deleteEmployee(selectedEmployee)\r\n            .then(() => {\r\n                setEmployees(employees.filter(employee => employee.id !== selectedEmployee));\r\n                setDeleteDialogOpen(false);\r\n                setSelectedEmployee(null);\r\n            })\r\n            .catch(error => console.error('Error deleting employee:', error));\r\n    };\r\n\r\n    const handleShowDetails = (employeeId) => {\r\n        setInfoDialogOpen(true);\r\n        setSelectedEmployee(employeeId);\r\n    };\r\n\r\n    const handleCloseDialogs = () => {\r\n        setDeleteDialogOpen(false);\r\n        setInfoDialogOpen(false);\r\n        setSelectedEmployee(null);\r\n    };\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            {employees.map(employee => (\r\n                <Grid item xs={12} sm={6} md={4} lg={3} key={employee.id}>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <Typography variant=\"h6\" gutterBottom>\r\n                                {employee.name}\r\n                            </Typography>\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                color=\"secondary\"\r\n                                onClick={() => handleDeleteEmployee(employee.id)}\r\n                            >\r\n                                Delete Employee\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                color=\"primary\"\r\n                                onClick={() => handleShowDetails(employee.id)}\r\n                            >\r\n                                Show Details\r\n                            </Button>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            ))}\r\n\r\n            {/* Delete Employee Dialog */}\r\n            <Dialog open={isDeleteDialogOpen} onClose={handleCloseDialogs}>\r\n                <DialogTitle>Delete Employee</DialogTitle>\r\n                <DialogContent>\r\n                    <Typography>Are you sure you want to delete this employee?</Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleCloseDialogs}>Cancel</Button>\r\n                    <Button color=\"secondary\" onClick={handleConfirmDelete}>\r\n                        Delete\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            {/* Show Employee Details Dialog */}\r\n            <Dialog open={isInfoDialogOpen} onClose={handleCloseDialogs}>\r\n                <DialogTitle>Employee Details</DialogTitle>\r\n                <DialogContent>\r\n                    <Typography>ID: {selectedEmployee}</Typography>\r\n                    {/* Add other details about the employee */}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleCloseDialogs}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default EmployeeList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}