{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\T\\\\WebstormProjects\\\\director-app\\\\src\\\\components\\\\EmployeeList.js\",\n  _s = $RefreshSig$();\n// src/components/EmployeeList.js\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, Table, TableContainer, TableHead, TableBody, TableRow, TableCell, Paper } from '@mui/material';\nimport ApiService from '../services/ApiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeList = ({\n  departmentId\n}) => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  useEffect(() => {\n    ApiService.getEmployeesByDepartment(departmentId).then(response => setEmployees(response.data)).catch(error => console.error('Error fetching employees:', error));\n  }, [departmentId]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: [\"Employee List for Department \", departmentId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: employees.map(employee => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: employee.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: employee.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 33\n            }, this)]\n          }, employee.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(EmployeeList, \"/A1Ii8+9z2SDNTFDutGp9pjEZTU=\");\n_c = EmployeeList;\nexport default EmployeeList;\nvar _c;\n$RefreshReg$(_c, \"EmployeeList\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Table","TableContainer","TableHead","TableBody","TableRow","TableCell","Paper","ApiService","jsxDEV","_jsxDEV","EmployeeList","departmentId","_s","employees","setEmployees","getEmployeesByDepartment","then","response","data","catch","error","console","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","component","map","employee","id","name","_c","$RefreshReg$"],"sources":["C:/Users/T/WebstormProjects/director-app/src/components/EmployeeList.js"],"sourcesContent":["// src/components/EmployeeList.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n    Box,\r\n    Typography,\r\n    Table,\r\n    TableContainer,\r\n    TableHead,\r\n    TableBody,\r\n    TableRow,\r\n    TableCell,\r\n    Paper,\r\n} from '@mui/material';\r\nimport ApiService from '../services/ApiService';\r\n\r\nconst EmployeeList = ({ departmentId }) => {\r\n    const [employees, setEmployees] = useState([]);\r\n\r\n    useEffect(() => {\r\n        ApiService.getEmployeesByDepartment(departmentId)\r\n            .then(response => setEmployees(response.data))\r\n            .catch(error => console.error('Error fetching employees:', error));\r\n    }, [departmentId]);\r\n\r\n    return (\r\n        <Box>\r\n            <Typography variant=\"h4\">Employee List for Department {departmentId}</Typography>\r\n            <TableContainer component={Paper}>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>ID</TableCell>\r\n                            <TableCell>Name</TableCell>\r\n                            {/* Add more table headers based on your employee data */}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {employees.map(employee => (\r\n                            <TableRow key={employee.id}>\r\n                                <TableCell>{employee.id}</TableCell>\r\n                                <TableCell>{employee.name}</TableCell>\r\n                                {/* Add more table cells based on your employee data */}\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default EmployeeList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}