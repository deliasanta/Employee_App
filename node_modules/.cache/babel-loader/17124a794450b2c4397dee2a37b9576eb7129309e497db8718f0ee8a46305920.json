{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\T\\\\WebstormProjects\\\\director-app\\\\src\\\\components\\\\EmailForm.js\",\n  _s = $RefreshSig$();\n// src/components/EmailForm.js\nimport React, { useState } from 'react';\nimport { Button, TextField } from '@mui/material';\nimport ApiService from '../services/ApiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmailForm = ({\n  selectedPersons,\n  onClose\n}) => {\n  _s();\n  const [emailData, setEmailData] = useState({\n    subject: '',\n    body: ''\n  });\n  const handleSendEmail = () => {\n    ApiService.sendEmailToSelected(selectedPersons, emailData).then(() => {\n      console.log('Email sent successfully');\n      onClose(); // Close the email form after sending\n    }).catch(error => {\n      console.error('Error sending email:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Subject\",\n      fullWidth: true,\n      value: emailData.subject,\n      onChange: e => setEmailData({\n        ...emailData,\n        subject: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Body\",\n      fullWidth: true,\n      multiline: true,\n      rows: 4,\n      value: emailData.body,\n      onChange: e => setEmailData({\n        ...emailData,\n        body: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleSendEmail,\n      children: \"Send Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(EmailForm, \"G9r4BHflzpNkO4Et5xeDiwpjzKw=\");\n_c = EmailForm;\nexport default EmailForm;\nvar _c;\n$RefreshReg$(_c, \"EmailForm\");","map":{"version":3,"names":["React","useState","Button","TextField","ApiService","jsxDEV","_jsxDEV","EmailForm","selectedPersons","onClose","_s","emailData","setEmailData","subject","body","handleSendEmail","sendEmailToSelected","then","console","log","catch","error","children","label","fullWidth","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","multiline","rows","variant","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/T/WebstormProjects/director-app/src/components/EmailForm.js"],"sourcesContent":["// src/components/EmailForm.js\r\nimport React, { useState } from 'react';\r\nimport { Button, TextField } from '@mui/material';\r\nimport ApiService from '../services/ApiService';\r\n\r\nconst EmailForm = ({ selectedPersons, onClose }) => {\r\n    const [emailData, setEmailData] = useState({\r\n        subject: '',\r\n        body: '',\r\n    });\r\n\r\n    const handleSendEmail = () => {\r\n        ApiService.sendEmailToSelected(selectedPersons, emailData)\r\n            .then(() => {\r\n                console.log('Email sent successfully');\r\n                onClose(); // Close the email form after sending\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error sending email:', error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <TextField\r\n                label=\"Subject\"\r\n                fullWidth\r\n                value={emailData.subject}\r\n                onChange={(e) => setEmailData({ ...emailData, subject: e.target.value })}\r\n            />\r\n            <TextField\r\n                label=\"Body\"\r\n                fullWidth\r\n                multiline\r\n                rows={4}\r\n                value={emailData.body}\r\n                onChange={(e) => setEmailData({ ...emailData, body: e.target.value })}\r\n            />\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleSendEmail}>\r\n                Send Email\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EmailForm;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,SAAS,QAAQ,eAAe;AACjD,OAAOC,UAAU,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,SAAS,GAAGA,CAAC;EAAEC,eAAe;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC;IACvCY,OAAO,EAAE,EAAE;IACXC,IAAI,EAAE;EACV,CAAC,CAAC;EAEF,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC1BX,UAAU,CAACY,mBAAmB,CAACR,eAAe,EAAEG,SAAS,CAAC,CACrDM,IAAI,CAAC,MAAM;MACRC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;MACtCV,OAAO,CAAC,CAAC,CAAC,CAAC;IACf,CAAC,CAAC,CACDW,KAAK,CAAEC,KAAK,IAAK;MACdH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD,CAAC,CAAC;EACV,CAAC;EAED,oBACIf,OAAA;IAAAgB,QAAA,gBACIhB,OAAA,CAACH,SAAS;MACNoB,KAAK,EAAC,SAAS;MACfC,SAAS;MACTC,KAAK,EAAEd,SAAS,CAACE,OAAQ;MACzBa,QAAQ,EAAGC,CAAC,IAAKf,YAAY,CAAC;QAAE,GAAGD,SAAS;QAAEE,OAAO,EAAEc,CAAC,CAACC,MAAM,CAACH;MAAM,CAAC;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5E,CAAC,eACF1B,OAAA,CAACH,SAAS;MACNoB,KAAK,EAAC,MAAM;MACZC,SAAS;MACTS,SAAS;MACTC,IAAI,EAAE,CAAE;MACRT,KAAK,EAAEd,SAAS,CAACG,IAAK;MACtBY,QAAQ,EAAGC,CAAC,IAAKf,YAAY,CAAC;QAAE,GAAGD,SAAS;QAAEG,IAAI,EAAEa,CAAC,CAACC,MAAM,CAACH;MAAM,CAAC;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzE,CAAC,eACF1B,OAAA,CAACJ,MAAM;MAACiC,OAAO,EAAC,WAAW;MAACC,KAAK,EAAC,SAAS;MAACC,OAAO,EAAEtB,eAAgB;MAAAO,QAAA,EAAC;IAEtE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAACtB,EAAA,CAtCIH,SAAS;AAAA+B,EAAA,GAAT/B,SAAS;AAwCf,eAAeA,SAAS;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}